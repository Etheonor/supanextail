/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/admin_list': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.admin_list.id'];
          isadmin?: parameters['rowFilter.admin_list.isadmin'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['admin_list'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** admin_list */
          admin_list?: definitions['admin_list'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.admin_list.id'];
          isadmin?: parameters['rowFilter.admin_list.isadmin'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.admin_list.id'];
          isadmin?: parameters['rowFilter.admin_list.isadmin'];
        };
        body: {
          /** admin_list */
          admin_list?: definitions['admin_list'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/profiles': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.profiles.id'];
          updated_at?: parameters['rowFilter.profiles.updated_at'];
          username?: parameters['rowFilter.profiles.username'];
          avatar_url?: parameters['rowFilter.profiles.avatar_url'];
          website?: parameters['rowFilter.profiles.website'];
          customerId?: parameters['rowFilter.profiles.customerId'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['profiles'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions['profiles'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.profiles.id'];
          updated_at?: parameters['rowFilter.profiles.updated_at'];
          username?: parameters['rowFilter.profiles.username'];
          avatar_url?: parameters['rowFilter.profiles.avatar_url'];
          website?: parameters['rowFilter.profiles.website'];
          customerId?: parameters['rowFilter.profiles.customerId'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.profiles.id'];
          updated_at?: parameters['rowFilter.profiles.updated_at'];
          username?: parameters['rowFilter.profiles.username'];
          avatar_url?: parameters['rowFilter.profiles.avatar_url'];
          website?: parameters['rowFilter.profiles.website'];
          customerId?: parameters['rowFilter.profiles.customerId'];
        };
        body: {
          /** profiles */
          profiles?: definitions['profiles'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/subscriptions': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.subscriptions.id'];
          customer_id?: parameters['rowFilter.subscriptions.customer_id'];
          paid_user?: parameters['rowFilter.subscriptions.paid_user'];
          plan?: parameters['rowFilter.subscriptions.plan'];
          subscription?: parameters['rowFilter.subscriptions.subscription'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['subscriptions'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** subscriptions */
          subscriptions?: definitions['subscriptions'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.subscriptions.id'];
          customer_id?: parameters['rowFilter.subscriptions.customer_id'];
          paid_user?: parameters['rowFilter.subscriptions.paid_user'];
          plan?: parameters['rowFilter.subscriptions.plan'];
          subscription?: parameters['rowFilter.subscriptions.subscription'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.subscriptions.id'];
          customer_id?: parameters['rowFilter.subscriptions.customer_id'];
          paid_user?: parameters['rowFilter.subscriptions.paid_user'];
          plan?: parameters['rowFilter.subscriptions.plan'];
          subscription?: parameters['rowFilter.subscriptions.subscription'];
        };
        body: {
          /** subscriptions */
          subscriptions?: definitions['subscriptions'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/rpc/handle_new_user': {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  admin_list: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: boolean */
    isadmin?: boolean;
  };
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /** Format: text */
    username?: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: text */
    website?: string;
    /** Format: text */
    customerId?: string;
  };
  subscriptions: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: text */
    customer_id?: string;
    /** Format: boolean */
    paid_user?: boolean;
    /** Format: text */
    plan?: string;
    /** Format: text */
    subscription?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: 'params=single-object';
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none';
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: 'count=none';
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description admin_list */
  'body.admin_list': definitions['admin_list'];
  /** Format: uuid */
  'rowFilter.admin_list.id': string;
  /** Format: boolean */
  'rowFilter.admin_list.isadmin': string;
  /** @description profiles */
  'body.profiles': definitions['profiles'];
  /** Format: uuid */
  'rowFilter.profiles.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.profiles.updated_at': string;
  /** Format: text */
  'rowFilter.profiles.username': string;
  /** Format: text */
  'rowFilter.profiles.avatar_url': string;
  /** Format: text */
  'rowFilter.profiles.website': string;
  /** Format: text */
  'rowFilter.profiles.customerId': string;
  /** @description subscriptions */
  'body.subscriptions': definitions['subscriptions'];
  /** Format: uuid */
  'rowFilter.subscriptions.id': string;
  /** Format: text */
  'rowFilter.subscriptions.customer_id': string;
  /** Format: boolean */
  'rowFilter.subscriptions.paid_user': string;
  /** Format: text */
  'rowFilter.subscriptions.plan': string;
  /** Format: text */
  'rowFilter.subscriptions.subscription': string;
}

export interface operations {}

export interface external {}
